{"version":3,"sources":["apiCalls.js","Components/GetEndpointDiv/GetEndpointDiv.js","Components/DeleteDiv/DeleteDiv.js","Components/App/App.js","formattedFetchExamples.js","index.js"],"names":["getCoinData","a","fetch","response","Error","json","coinData","getCoinDataOnDate","date","dateData","getCoinDataByName","name","ok","user","getUsers","users","getUser","username","GetEndpointDiv","title","endpoint","handleClick","parameters","className","map","param","i","key","onClick","DeleteDiv","props","handleChange","e","setState","parameter","target","value","preventDefault","state","this","type","onSubmit","placeholder","onChange","min","max","disabled","Component","App","printCoinData","then","resp","console","log","catch","err","printUserData","printDateData","printCoinNameData","printUser","simulateDeleteUser","message","simulateDeleteRecord","simulateCoinInsertion","0","simulateUserInsertion","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4220770.chunk.js","sourcesContent":["export const getCoinData = async () => {\n  const response = await fetch('https://heroku-coin-api.herokuapp.com/api/v1/coindata');\n  if(!response) {\n    throw Error('Failed to fetch coin data');\n  } else {\n    const coinData = await response.json();\n    return coinData;\n  }\n}\n  \nexport const getCoinDataOnDate = async (date) => {\n  const response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/coindata/date/${date}`);\n  if(!response) {\n    return Error('Could not fetch coin info');\n  } else {\n    const dateData = await response.json();\n    return dateData\n  }\n}\n\nexport const getCoinDataByName = async (name) => {\n  const response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/coindata/name/${name}`);\n  if(!response.ok) {\n    return Error('Coin not found');\n  } else {\n    const user = await response.json();\n    return user;\n  }\n}\n\nexport const getUsers = async () => {\n  const response = await fetch('https://heroku-coin-api.herokuapp.com/api/v1/users');\n  if(!response) {\n    return Error('Unable to fetch users');\n  } else {\n    const users = await response.json();\n    return users;\n  }\n}\n\nexport const getUser = async (username) => {\n  const response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/users/${username}`);\n  if(!response) {\n    return Error('User not found');\n  } else {\n    const user = await response.json();\n    return user;\n  }\n}\n\nexport const deleteUser = async (username) => {\n  const response = await fetch('https://heroku-coin-api.herokuapp.com/api/v1/users', {\n    method: 'DELETE',\n    headers: { 'content-type': 'application/json'},\n    body: JSON.stringify({\n      username\n    })\n  });\n  if(!response.ok) {\n    return Error('Failed to delete user');\n  }\n  const resp = await response.json();\n  return resp;\n}\n\nexport const deleteRecord = async (date) => {\n  const response = await fetch('https://heroku-coin-api.herokuapp.com/api/v1/coin', {\n    method: 'DELETE',\n    headers: { 'content-type': 'application/json' },\n    body: JSON.stringify({ date })\n  })\n  if(!response.ok) {\n    return Error('Failed to delete record');\n  }\n  const resp = await response.json();\n  return resp;\n}","import React from 'react';\nimport './GetEndpointDiv.css';\n\nconst GetEndpointDiv = ({ title, endpoint, handleClick, fetch, parameters }) => {\n  return (\n    <div className=\"endpoint\">\n      <h3>{title}</h3>\n      <code>\n        {endpoint}\n      </code>\n      { parameters && (\n        <ul>\n          {parameters.map((param, i) => <li key={i}>{param}</li>)}\n        </ul>\n      )}\n      <h4>JS example</h4>\n      <pre>{fetch}</pre>\n      <button onClick={handleClick}>Run Example</button>\n    </div>\n  );\n}\n\nexport default GetEndpointDiv;","import React, { Component } from 'react';\nimport './DeleteDiv.css';\n\nclass DeleteDiv extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      parameter: '',\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ parameter: e.target.value });\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const param = this.state.parameter;\n    this.props.handleClick(param);\n    this.setState({ parameter: '' });\n  }\n\n  render() {\n    const { title, endpoint, fetch, parameter, type } = this.props;\n    return (\n      <div className=\"endpoint\">\n        <h3>{title}</h3>\n        <code>\n          {endpoint}\n        </code>\n        <h4>Parameters</h4>\n        <p>{parameter} String</p>\n        <h4>JS example</h4>\n        <pre>{fetch}</pre>\n        <form onSubmit={this.handleClick}>\n        <input \n          placeholder={parameter} \n          onChange={this.handleChange}\n          value={this.state.parameter}\n          type={type || 'text'}\n          min='2019-01-01'\n          max='2019-11-10'\n        />\n        {!this.state.parameter && <button disabled>Run</button>}\n        {this.state.parameter && <button>Run</button>}\n        </form>\n      </div>\n    );  \n  }\n}\n\nexport default DeleteDiv;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { \n  getCoinData,\n  getUsers, \n  getCoinDataOnDate,\n  getCoinDataByName,\n  getUser,\n} from '../../apiCalls';\nimport { \n  coinDataFetch,\n  dateCoinFetch, \n  nameCoinFetch, \n  usersFetch,\n  userFetch,\n  deleteUser,\n  deleteRecord,\n  insertRecord,\n  insertUser,\n} from '../../formattedFetchExamples';\nimport GetEndpointDiv from '../GetEndpointDiv/GetEndpointDiv';\nimport DeleteDiv from '../DeleteDiv/DeleteDiv';\n\nclass App extends Component {\n  printCoinData = () => {\n    getCoinData()\n      .then((resp) => console.log(resp))\n      .catch((err) => console.log(err));\n  }\n\n  printUserData = () => {\n    getUsers()\n      .then((resp) => console.log(resp))\n      .catch((err) => console.log(err));\n  }\n\n  printDateData = () => {\n    getCoinDataOnDate('2019-11-10')\n      .then((resp) => console.log(resp))\n      .catch((err) => console.log(err));\n  }\n\n  printCoinNameData = () => {\n    getCoinDataByName('Bitcoin')\n      .then((resp) => console.log(resp))\n      .catch((err) => console.log(err));\n  }\n\n  printUser = () => {\n    getUser('Arya')\n      .then((resp) => console.log(resp))\n      .catch((err) => console.log(err));\n  }\n\n  simulateDeleteUser = (username) => {\n    const message = { message: `Successfully deleted user with username ${username}`};\n    console.log(message);\n  }\n\n  simulateDeleteRecord = (date) => {\n    const message = { message: `Successfully deleted records on date: ${date}`};\n    console.log(message);\n  }\n\n  simulateCoinInsertion = () => {\n    console.log({ 0: 954 });\n  }\n  \n  simulateUserInsertion = () => {\n    console.log({ 0: \"Bran\" });\n  }\n  \n  render() {\n    return (\n      <main>\n        <h1>Coin Api Documentation</h1>\n        <section id=\"endpoints\">\n          <h2>Endpoints</h2>\n          <GetEndpointDiv \n            title='GET All Coin Data' \n            endpoint='https://heroku-coin-api.herokuapp.com/api/v1/coindata'\n            handleClick={this.printCoinData}\n            fetch={coinDataFetch}\n          />\n          <GetEndpointDiv\n            title='GET All Coin Data On Date'\n            endpoint='https://heroku-coin-api.herokuapp.com/api/v1/coindata/date/:date'\n            handleClick={this.printDateData}\n            fetch={dateCoinFetch}\n          />\n          <GetEndpointDiv\n            title='GET All Coin Data By Name'\n            endpoint='https://heroku-coin-api.herokuapp.com/api/v1/coindata/name/:name'\n            handleClick={this.printCoinNameData}\n            fetch={nameCoinFetch}\n          />\n          <GetEndpointDiv \n            title='POST New Record' \n            endpoint='https://heroku-coin-api.herokuapp.com/api/v1/coindata'\n            handleClick={this.simulateCoinInsertion}\n            fetch={insertRecord}\n            parameters={[\n              'name <String>',\n              'coinId: <Integer>', \n              'date <String> yyyy/mm/dd', \n              'price <Double>', \n              'marketCap <Double>'\n            ]}\n          />\n          <DeleteDiv\n            id='last-div'\n            title='DELETE A Record On A Date'\n            endpoint='https://heroku-coin-api.herokuapp.com/api/v1/coindata/:date'\n            handleClick={this.simulateDeleteRecord}\n            fetch={deleteRecord}\n            parameter='date'\n            type='date'\n          />\n          <GetEndpointDiv\n            title='GET All User Data'\n            endpoint='https://heroku-coin-api.herokuapp.com/api/v1/users'\n            handleClick={this.printUserData}\n            fetch={usersFetch}\n          />\n          <GetEndpointDiv\n            title='GET A User By Username'\n            endpoint='https://heroku-coin-api.herokuapp.com/api/v1/users/:name'\n            handleClick={this.printUser}\n            fetch={userFetch}\n          />\n          <GetEndpointDiv \n            title='POST A New User' \n            endpoint='https://heroku-coin-api.herokuapp.com/api/v1/users'\n            handleClick={this.simulateUserInsertion}\n            fetch={insertUser}\n            parameters={[\n              'username <String>',\n              'coinname <String>',\n              'coinId <Integer>',\n              'qty <Integer>'\n            ]}\n          />\n          <DeleteDiv\n            title='DELETE A User'\n            endpoint='https://heroku-coin-api.herokuapp.com/api/v1/users/:username'\n            handleClick={this.simulateDeleteUser}\n            fetch={deleteUser}\n            parameter='username'\n          />\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n\n","export const coinDataFetch = 'const getCoinData = async () => {\\n'\n  +'  const response = await fetch(\\'https://heroku-coin-api.herokuapp.com/api/v1/coindata\\');\\n'\n  +'  if(!response) {\\n'\n  +'    throw Error(\\'Failed to fetch coin data\\');\\n'\n  +'  } else {\\n'\n  +'    const coinData = await response.json();\\n'\n  +'    console.log(coinData);\\n'\n  +'  }\\n'\n  +'}\\n'\n  +'getCoinData()';\n\nexport const dateCoinFetch = 'const getCoinDataOnDate = async (date) => {\\n'\n  +'const response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/coindata/date/${date}`);\\n'\n  +'  if(!response) {\\n'\n  +'    return Error(\\'Could not fetch coin info\\');\\n'\n  +'  } else {\\n'\n  +'    const dateData = await response.json();\\n'\n  +'    console.log(dateData)\\n'\n  +'  }\\n'\n  +'}\\n'\n  +'getCoinDataOnDate(\\'2019-11-10\\');';\n\nexport const nameCoinFetch = 'const getCoinDataByName = async (name) => {\\n'\n  +'const response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/coindata/name/${name}`);\\n'\n  +'  if(!response.ok) {\\n'\n  +'    return Error(\\'Coin not found\\');\\n'\n  +'  } else {\\n'\n  +'    const user = await response.json();\\n'\n  +'    console.log(user);\\n'\n  +'  }\\n'\n  +'}\\n'\n  +'getCoinDataByName(\\'Bitcoin\\')';\n\nexport const usersFetch = 'const getUsers = async () => {\\n'\n  +'const response = await fetch(\\'https://heroku-coin-api.herokuapp.com/api/v1/users\\');\\n'\n  +'  if(!response) {\\n'\n  +'    return Error(\\'Unable to fetch users\\');\\n'\n  +'  } else {\\n'\n  +'    const users = await response.json();\\n'\n  +'    console.log(users);\\n'\n  +'  }\\n'\n  +'}\\n'\n  +'getUsers();';\n\nexport const userFetch = 'const getUser = async (username) => {\\n'\n  +'const response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/users/${username}`);\\n'\n  +'  if(!response) {\\n'\n  +'    return Error(\\'User not found\\');\\n'\n  +'  } else {\\n'\n  +'    const user = await response.json();\\n'\n  +'    console.log(user);\\n'\n  +'  }\\n'\n  +'}\\n'\n  +'getUser(\\'Arya\\');';\n\nexport const deleteUser = 'const deleteUser = async (username) => {\\n'\n  +'  const response = await fetch(\\`https://heroku-coin-api.herokuapp.com/api/v1/users/${username}\\`, {\\n'\n  +'    method: \\'DELETE\\',\\n'\n  +'  });\\n'\n  +'  if(!response.ok) {\\n'\n  +'    return Error(\\'Failed to delete user\\');\\n'\n  +'  }\\n'\n  +'  const resp = await response.json();\\n'\n  +'  console.log(resp);\\n'\n  +'}\\n'\n  +'deleteUser(\\'Arya\\')';\n\nexport const deleteRecord = 'const deleteRecord = async (date) => {\\n'\n  +'  const response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/coindata/${date}`, {\\n'\n  +'    method: \\'DELETE\\',\\n'\n  +'  })\\n'\n  +'  if(!response.ok) {\\n'\n  +'     return Error(\\'Failed to delete record\\');\\n'\n  +'  }\\n'\n  +'  const resp = await response.json();\\n'\n  +'  console.log(resp);\\n'\n  +'}\\n'\n  +'deleteRecord(\\'2019-10-10\\')'\n\n  export const insertRecord = 'const insertRecord = async (name, date, price, marketCap, coinId) => {\\n'\n  +'  const response = await fetch(\\'https://heroku-coin-api.herokuapp.com/api/v1/coindata\\', {\\n'\n  +'    method: \\'POST\\',\\n'\n  +'    headers: { \\'content-type\\': \\'application/json\\' },\\n'\n  +'    body: JSON.stringify({\\n'\n  +'      name,\\n'\n  +'      date,\\n'\n  +'      price,\\n'\n  +'      marketCap,\\n'\n  +'      coinId\\n'\n  +'    })\\n'\n  +'  });\\n'\n  +'  if(!response.ok) {\\n'\n  +'  return Error(\\'Failed To Insert Record\\');\\n'\n  +'  }\\n'\n  +'  const resp = await response.json();\\n'\n  +'  console.log(resp);\\n'\n  +'}\\n'\n  +'insertRecord(\\'Bitcoin\\', \\'2019-11-29\\', 120.00, 123456.03, 1);';\n\n  export const insertUser = 'const insertUser = async (username, coinname, qty, coinId) => {\\n'\n    +'  const response = await fetch(\\'https://heroku-coin-api.herokuapp.com/api/v1/users\\', {\\n'\n    +'    method: \\'POST\\',\\n'\n    +'    headers: {\\'content-type\\': \\'application/json\\'},\\n'\n    +'    body: JSON.stringify({\\n'\n    +'      coinname,\\n'\n    +'      qty,\\n'\n    +'      coinId,\\n'\n    +'      username\\n'\n    +'    })\\n'\n    +'  });\\n'\n    +'  if(!response.ok) {\\n'\n    +'    return Error(\\'Failed to inert User\\');\\n'\n    +'   }\\n'\n    +'  const resp = await response.json();\\n'\n    +'  console.log(resp);\\n'\n    +'}\\n'\n    +'insertUser(\\'Jarold\\', \\'Bitcoin\\', 150, 1);';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}