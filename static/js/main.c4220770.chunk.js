(this["webpackJsonpcrypto-api-frontend"]=this["webpackJsonpcrypto-api-frontend"]||[]).push([[0],[,,,,,,,,,,function(e,n,t){e.exports=t(20)},,,,,function(e,n,t){},function(e,n,t){},,function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(9),c=t.n(o),s=(t(15),t(3)),i=t(4),u=t(6),p=t(5),l=t(7),h=(t(16),t(1)),m=t.n(h),d=t(2),f=function(){var e=Object(d.a)(m.a.mark((function e(){var n,t;return m.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("https://heroku-coin-api.herokuapp.com/api/v1/coindata");case 2:if(n=e.sent){e.next=7;break}throw Error("Failed to fetch coin data");case 7:return e.next=9,n.json();case 9:return t=e.sent,e.abrupt("return",t);case 11:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),k=function(){var e=Object(d.a)(m.a.mark((function e(n){var t,a;return m.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("https://heroku-coin-api.herokuapp.com/api/v1/coindata/date/".concat(n));case 2:if(t=e.sent){e.next=7;break}return e.abrupt("return",Error("Could not fetch coin info"));case 7:return e.next=9,t.json();case 9:return a=e.sent,e.abrupt("return",a);case 11:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),E=function(){var e=Object(d.a)(m.a.mark((function e(n){var t,a;return m.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("https://heroku-coin-api.herokuapp.com/api/v1/coindata/name/".concat(n));case 2:if((t=e.sent).ok){e.next=7;break}return e.abrupt("return",Error("Coin not found"));case 7:return e.next=9,t.json();case 9:return a=e.sent,e.abrupt("return",a);case 11:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),v=function(){var e=Object(d.a)(m.a.mark((function e(){var n,t;return m.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("https://heroku-coin-api.herokuapp.com/api/v1/users");case 2:if(n=e.sent){e.next=7;break}return e.abrupt("return",Error("Unable to fetch users"));case 7:return e.next=9,n.json();case 9:return t=e.sent,e.abrupt("return",t);case 11:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),g=function(){var e=Object(d.a)(m.a.mark((function e(n){var t,a;return m.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("https://heroku-coin-api.herokuapp.com/api/v1/users/".concat(n));case 2:if(t=e.sent){e.next=7;break}return e.abrupt("return",Error("User not found"));case 7:return e.next=9,t.json();case 9:return a=e.sent,e.abrupt("return",a);case 11:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),y=(t(18),function(e){var n=e.title,t=e.endpoint,a=e.handleClick,o=e.fetch,c=e.parameters;return r.a.createElement("div",{className:"endpoint"},r.a.createElement("h3",null,n),r.a.createElement("code",null,t),c&&r.a.createElement("ul",null,c.map((function(e,n){return r.a.createElement("li",{key:n},e)}))),r.a.createElement("h4",null,"JS example"),r.a.createElement("pre",null,o),r.a.createElement("button",{onClick:a},"Run Example"))}),b=(t(19),function(e){function n(e){var t;return Object(s.a)(this,n),(t=Object(u.a)(this,Object(p.a)(n).call(this,e))).handleChange=function(e){t.setState({parameter:e.target.value})},t.handleClick=function(e){e.preventDefault();var n=t.state.parameter;t.props.handleClick(n),t.setState({parameter:""})},t.state={parameter:""},t}return Object(l.a)(n,e),Object(i.a)(n,[{key:"render",value:function(){var e=this.props,n=e.title,t=e.endpoint,a=e.fetch,o=e.parameter,c=e.type;return r.a.createElement("div",{className:"endpoint"},r.a.createElement("h3",null,n),r.a.createElement("code",null,t),r.a.createElement("h4",null,"Parameters"),r.a.createElement("p",null,o," String"),r.a.createElement("h4",null,"JS example"),r.a.createElement("pre",null,a),r.a.createElement("form",{onSubmit:this.handleClick},r.a.createElement("input",{placeholder:o,onChange:this.handleChange,value:this.state.parameter,type:c||"text",min:"2019-01-01",max:"2019-11-10"}),!this.state.parameter&&r.a.createElement("button",{disabled:!0},"Run"),this.state.parameter&&r.a.createElement("button",null,"Run")))}}]),n}(a.Component)),C=function(e){function n(){var e,t;Object(s.a)(this,n);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(t=Object(u.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(r)))).printCoinData=function(){f().then((function(e){return console.log(e)})).catch((function(e){return console.log(e)}))},t.printUserData=function(){v().then((function(e){return console.log(e)})).catch((function(e){return console.log(e)}))},t.printDateData=function(){k("2019-11-10").then((function(e){return console.log(e)})).catch((function(e){return console.log(e)}))},t.printCoinNameData=function(){E("Bitcoin").then((function(e){return console.log(e)})).catch((function(e){return console.log(e)}))},t.printUser=function(){g("Arya").then((function(e){return console.log(e)})).catch((function(e){return console.log(e)}))},t.simulateDeleteUser=function(e){var n={message:"Successfully deleted user with username ".concat(e)};console.log(n)},t.simulateDeleteRecord=function(e){var n={message:"Successfully deleted records on date: ".concat(e)};console.log(n)},t.simulateCoinInsertion=function(){console.log({0:954})},t.simulateUserInsertion=function(){console.log({0:"Bran"})},t}return Object(l.a)(n,e),Object(i.a)(n,[{key:"render",value:function(){return r.a.createElement("main",null,r.a.createElement("h1",null,"Coin Api Documentation"),r.a.createElement("section",{id:"endpoints"},r.a.createElement("h2",null,"Endpoints"),r.a.createElement(y,{title:"GET All Coin Data",endpoint:"https://heroku-coin-api.herokuapp.com/api/v1/coindata",handleClick:this.printCoinData,fetch:"const getCoinData = async () => {\n  const response = await fetch('https://heroku-coin-api.herokuapp.com/api/v1/coindata');\n  if(!response) {\n    throw Error('Failed to fetch coin data');\n  } else {\n    const coinData = await response.json();\n    console.log(coinData);\n  }\n}\ngetCoinData()"}),r.a.createElement(y,{title:"GET All Coin Data On Date",endpoint:"https://heroku-coin-api.herokuapp.com/api/v1/coindata/date/:date",handleClick:this.printDateData,fetch:"const getCoinDataOnDate = async (date) => {\nconst response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/coindata/date/${date}`);\n  if(!response) {\n    return Error('Could not fetch coin info');\n  } else {\n    const dateData = await response.json();\n    console.log(dateData)\n  }\n}\ngetCoinDataOnDate('2019-11-10');"}),r.a.createElement(y,{title:"GET All Coin Data By Name",endpoint:"https://heroku-coin-api.herokuapp.com/api/v1/coindata/name/:name",handleClick:this.printCoinNameData,fetch:"const getCoinDataByName = async (name) => {\nconst response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/coindata/name/${name}`);\n  if(!response.ok) {\n    return Error('Coin not found');\n  } else {\n    const user = await response.json();\n    console.log(user);\n  }\n}\ngetCoinDataByName('Bitcoin')"}),r.a.createElement(y,{title:"POST New Record",endpoint:"https://heroku-coin-api.herokuapp.com/api/v1/coindata",handleClick:this.simulateCoinInsertion,fetch:"const insertRecord = async (name, date, price, marketCap, coinId) => {\n  const response = await fetch('https://heroku-coin-api.herokuapp.com/api/v1/coindata', {\n    method: 'POST',\n    headers: { 'content-type': 'application/json' },\n    body: JSON.stringify({\n      name,\n      date,\n      price,\n      marketCap,\n      coinId\n    })\n  });\n  if(!response.ok) {\n  return Error('Failed To Insert Record');\n  }\n  const resp = await response.json();\n  console.log(resp);\n}\ninsertRecord('Bitcoin', '2019-11-29', 120.00, 123456.03, 1);",parameters:["name <String>","coinId: <Integer>","date <String> yyyy/mm/dd","price <Double>","marketCap <Double>"]}),r.a.createElement(b,{id:"last-div",title:"DELETE A Record On A Date",endpoint:"https://heroku-coin-api.herokuapp.com/api/v1/coindata/:date",handleClick:this.simulateDeleteRecord,fetch:"const deleteRecord = async (date) => {\n  const response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/coindata/${date}`, {\n    method: 'DELETE',\n  })\n  if(!response.ok) {\n     return Error('Failed to delete record');\n  }\n  const resp = await response.json();\n  console.log(resp);\n}\ndeleteRecord('2019-10-10')",parameter:"date",type:"date"}),r.a.createElement(y,{title:"GET All User Data",endpoint:"https://heroku-coin-api.herokuapp.com/api/v1/users",handleClick:this.printUserData,fetch:"const getUsers = async () => {\nconst response = await fetch('https://heroku-coin-api.herokuapp.com/api/v1/users');\n  if(!response) {\n    return Error('Unable to fetch users');\n  } else {\n    const users = await response.json();\n    console.log(users);\n  }\n}\ngetUsers();"}),r.a.createElement(y,{title:"GET A User By Username",endpoint:"https://heroku-coin-api.herokuapp.com/api/v1/users/:name",handleClick:this.printUser,fetch:"const getUser = async (username) => {\nconst response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/users/${username}`);\n  if(!response) {\n    return Error('User not found');\n  } else {\n    const user = await response.json();\n    console.log(user);\n  }\n}\ngetUser('Arya');"}),r.a.createElement(y,{title:"POST A New User",endpoint:"https://heroku-coin-api.herokuapp.com/api/v1/users",handleClick:this.simulateUserInsertion,fetch:"const insertUser = async (username, coinname, qty, coinId) => {\n  const response = await fetch('https://heroku-coin-api.herokuapp.com/api/v1/users', {\n    method: 'POST',\n    headers: {'content-type': 'application/json'},\n    body: JSON.stringify({\n      coinname,\n      qty,\n      coinId,\n      username\n    })\n  });\n  if(!response.ok) {\n    return Error('Failed to inert User');\n   }\n  const resp = await response.json();\n  console.log(resp);\n}\ninsertUser('Jarold', 'Bitcoin', 150, 1);",parameters:["username <String>","coinname <String>","coinId <Integer>","qty <Integer>"]}),r.a.createElement(b,{title:"DELETE A User",endpoint:"https://heroku-coin-api.herokuapp.com/api/v1/users/:username",handleClick:this.simulateDeleteUser,fetch:"const deleteUser = async (username) => {\n  const response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/users/${username}`, {\n    method: 'DELETE',\n  });\n  if(!response.ok) {\n    return Error('Failed to delete user');\n  }\n  const resp = await response.json();\n  console.log(resp);\n}\ndeleteUser('Arya')",parameter:"username"})))}}]),n}(a.Component);c.a.render(r.a.createElement(C,null),document.getElementById("root"))}],[[10,1,2]]]);
//# sourceMappingURL=main.c4220770.chunk.js.map